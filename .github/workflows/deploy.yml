name: CI/CD Pipeline

on:
  workflow_dispatch:  # Manual trigger
  push:
    paths-ignore:
      - 'terraform/**'
      - '**.md'
      - '.github/workflows/terraform.yml'
  pull_request:
    paths-ignore:
      - 'terraform/**'
      - '**.md'
      - '.github/workflows/terraform.yml'

env:
  REGION: us-central1
  PROJECT_ID: tonal-unity-460616-s4
  IMAGE_NAME: fraud-prevention-api

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Run tests
        run: npm run test:ci

  build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          service_account: 'github-actions@${{ env.PROJECT_ID }}.iam.gserviceaccount.com'
          access_token_lifetime: '1200s'

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v1'

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build and push container
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/fraud-prevention/${{ env.IMAGE_NAME }}:latest,${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/fraud-prevention/${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/fraud-prevention/${{ env.IMAGE_NAME }}:latest
          cache-to: type=inline

  update-cloud-run:
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    
    steps:
      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          service_account: 'github-actions@${{ env.PROJECT_ID }}.iam.gserviceaccount.com'
          access_token_lifetime: '1200s'

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v1'

      - name: Update Cloud Run service
        run: |
          gcloud run services update fraud-prevention-ms \
            --image=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/fraud-prevention/${{ env.IMAGE_NAME }}:latest \
            --region=${{ env.REGION }} \
            --project=${{ env.PROJECT_ID }} \
            --platform=managed 